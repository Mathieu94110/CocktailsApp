{"version":3,"file":"static/js/349.d4cfe447.chunk.js","mappings":"gLACA,G,OAAA,CAAgB,KAAO,kCAAkC,WAAa,wCAAwC,eAAiB,4CAA4C,UAAY,uCAAuC,WAAa,wCAAwC,UAAY,uCAAuC,SAAW,sCAAsC,SAAW,wC,SCoHlY,MAjHA,SAA6B,GAA4C,IAA1CA,EAAM,EAANA,OAG3BC,EA4BED,EA5BFC,YACAC,EA2BEF,EA3BFE,SACAC,EA0BEH,EA1BFG,aACAC,EAyBEJ,EAzBFI,cACAC,EAwBEL,EAxBFK,gBACAC,EAuBEN,EAvBFM,SACAC,EAsBEP,EAtBFO,OACAC,EAqBER,EArBFQ,QAuBIC,EAAc,CAFhBT,EApBFU,eAoBEV,EAnBFW,eAmBEX,EAlBFY,eAkBEZ,EAjBFa,eAiBEb,EAhBFc,gBA0BIC,EAAW,CAVbf,EAfFgB,YAeEhB,EAdFiB,YAcEjB,EAbFkB,YAaElB,EAZFmB,YAYEnB,EAXFoB,YAWEpB,EAVFqB,YAUErB,EATFsB,YASEtB,EARFuB,YAQEvB,EAPFwB,YAOExB,EANFyB,aAMEzB,EALF0B,aAKE1B,EAJF2B,aAIE3B,EAHF4B,aAGE5B,EAFF6B,aAEE7B,EADF8B,cA6BF,OACE,0BACE,iBAAKC,UAAWC,EAAAA,KAAY,WAC1B,iBAAKD,UAAWC,EAAAA,WAAkB,WAChC,4BACE,iBAAMD,UAAWC,EAAAA,SAAgB,sBAAgB,KAAG/B,MAEtD,iBAAK8B,UAAWC,EAAAA,eAAsB,WACpC,gBAAID,UAAWC,EAAAA,UAAiB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,mBAAa,KAAG9B,MAEnD,iBAAK6B,UAAWC,EAAAA,WAAkB,WAChC,iBAAMD,UAAWC,EAAAA,SAAgB,oBAAc,KAAG7B,YAIxD,gBAAK4B,UAAWC,EAAAA,UAAkBC,IAAK7B,EAAe8B,IAAKhC,KAC3D,iBAAK6B,UAAWC,EAAAA,SAAgB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,0BAAoB,IAAE,IACtD3B,MAEH,iBAAK0B,UAAWC,EAAAA,SAAgB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,mBAAa,KAAG1B,MAEnD,iBAAKyB,UAAWC,EAAAA,SAAgB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,iBAAW,IAAE,IAC7CzB,GAAkB,cAGrB,iBAAKwB,UAAWC,EAAAA,SAAgB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,kBAAY,IAAE,IAC9CxB,GAAoB,cAEvB,iBAAKuB,UAAWC,EAAAA,SAAgB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,yBAAmB,IAAE,IACrDvB,EAAY0B,KAAI,SAACC,EAAaC,GAC7B,OAAOD,GACL,2BAAoBC,EAAQ,KAAO,IAAMD,GAA9BC,GACT,IACN,QAEF,iBAAKN,UAAWC,EAAAA,SAAgB,WAC9B,iBAAMD,UAAWC,EAAAA,SAAgB,sBAAgB,IAAE,IAClDjB,EAASoB,KAAI,SAACC,EAAcC,GAC3B,OAAOD,GACL,2BAAoBC,EAAQ,KAAO,IAAMD,GAA9BC,GACT,IACN,WAKV,EClHA,EAA6B,oCAA7B,EAAmF,yCAAnF,EAA4I,uCC8B5I,MA1BA,WACE,IAAMC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKV,UAAWC,EAAuB,WACrC,mBACED,UAAWC,EACXU,QAAS,WACPF,EAAS,IAAK,CAAEG,SAAS,GAC3B,EAAE,mBAIJ,eAAIZ,UAAWC,EAAqB,SACjCM,GACCA,EAAQH,KAAI,SAACS,EAAsBP,GAAa,OAC9C,yBACE,SAAC,EAAmB,CAACrC,OAAQ4C,KADtBP,EAEJ,QAKjB,C","sources":["webpack://cocktailsmaster/./src/pages/CocktailsRecipe/Components/CocktailsRecipeCard/CocktailsRecipeCard.module.scss?1c57","pages/CocktailsRecipe/Components/CocktailsRecipeCard/CocktailsRecipeCard.tsx","webpack://cocktailsmaster/./src/pages/CocktailsRecipe/CocktailsRecipe.module.scss?d834","pages/CocktailsRecipe/CocktailsRecipe.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"CocktailsRecipeCard_card__hqhtL\",\"cardHeader\":\"CocktailsRecipeCard_cardHeader__Pe-+d\",\"cardTitleGroup\":\"CocktailsRecipeCard_cardTitleGroup__fIjvR\",\"cardTitle\":\"CocktailsRecipeCard_cardTitle__VoN9p\",\"cardAlcool\":\"CocktailsRecipeCard_cardAlcool__rRQ-8\",\"cardImage\":\"CocktailsRecipeCard_cardImage__oNSdO\",\"cardText\":\"CocktailsRecipeCard_cardText__gF12W\",\"subTitle\":\"CocktailsRecipeCard_subTitle__TurUS\"};","import React from 'react';\r\nimport styles from './CocktailsRecipeCard.module.scss';\r\nimport { CocktailInterface } from '../../../../interfaces/cocktails.interface';\r\n\r\nfunction CocktailsRecipeCard({ recipe }: { recipe: CocktailInterface }) {\r\n  const {\r\n    // idDrink,\r\n    strCategory,\r\n    strDrink,\r\n    strAlcoholic,\r\n    strDrinkThumb,\r\n    strInstructions,\r\n    strGlass,\r\n    strIBA,\r\n    strTags,\r\n    strIngredient1,\r\n    strIngredient2,\r\n    strIngredient3,\r\n    strIngredient4,\r\n    strIngredient5,\r\n    strMeasure1,\r\n    strMeasure2,\r\n    strMeasure3,\r\n    strMeasure4,\r\n    strMeasure5,\r\n    strMeasure6,\r\n    strMeasure7,\r\n    strMeasure8,\r\n    strMeasure9,\r\n    strMeasure10,\r\n    strMeasure11,\r\n    strMeasure12,\r\n    strMeasure13,\r\n    strMeasure14,\r\n    strMeasure15,\r\n  } = recipe;\r\n\r\n  const ingredients = [\r\n    strIngredient1,\r\n    strIngredient2,\r\n    strIngredient3,\r\n    strIngredient4,\r\n    strIngredient5,\r\n  ];\r\n\r\n  const measures = [\r\n    strMeasure1,\r\n    strMeasure2,\r\n    strMeasure3,\r\n    strMeasure4,\r\n    strMeasure5,\r\n    strMeasure6,\r\n    strMeasure7,\r\n    strMeasure8,\r\n    strMeasure9,\r\n    strMeasure10,\r\n    strMeasure11,\r\n    strMeasure12,\r\n    strMeasure13,\r\n    strMeasure14,\r\n    strMeasure15,\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.card}>\r\n        <div className={styles.cardHeader}>\r\n          <div>\r\n            <span className={styles.subTitle}>Category</span>: {strCategory}\r\n          </div>\r\n          <div className={styles.cardtitleGroup}>\r\n            <h5 className={styles.cardTitle}>\r\n              <span className={styles.subTitle}>Title</span>: {strDrink}\r\n            </h5>\r\n            <div className={styles.cardAlcool}>\r\n              <span className={styles.subTitle}>Alcool</span>: {strAlcoholic}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <img className={styles.cardImage} src={strDrinkThumb} alt={strDrink} />\r\n        <div className={styles.cardText}>\r\n          <span className={styles.subTitle}>Instructions</span>:{' '}\r\n          {strInstructions}\r\n        </div>\r\n        <div className={styles.cardText}>\r\n          <span className={styles.subTitle}>Glass</span>: {strGlass}\r\n        </div>\r\n        <div className={styles.cardText}>\r\n          <span className={styles.subTitle}>IBA</span>:{' '}\r\n          {strIBA ? strIBA : 'No data'}\r\n        </div>\r\n\r\n        <div className={styles.cardText}>\r\n          <span className={styles.subTitle}>Tags</span>:{' '}\r\n          {strTags ? strTags : 'No data'}\r\n        </div>\r\n        <div className={styles.cardText}>\r\n          <span className={styles.subTitle}>Ingredients</span>:{' '}\r\n          {ingredients.map((item:string, index: number) => {\r\n            return item ? (\r\n              <span key={index}>{(index ? ', ' : '') + item}</span>\r\n            ) : null;\r\n          })}\r\n        </div>\r\n        <div className={styles.cardText}>\r\n          <span className={styles.subTitle}>Measures</span>:{' '}\r\n          {measures.map((item: string, index: number) => {\r\n            return item ? (\r\n              <span key={index}>{(index ? ', ' : '') + item}</span>\r\n            ) : null;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CocktailsRecipeCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"backButton\":\"CocktailsRecipe_backButton__x+p5d\",\"cocktailsRecipe\":\"CocktailsRecipe_cocktailsRecipe__TrfRr\",\"cardContainer\":\"CocktailsRecipe_cardContainer__y5NqO\"};","import { CocktailInterface } from 'interfaces';\r\nimport { useLoaderData, useNavigate } from 'react-router-dom';\r\nimport CocktailsRecipeCard from './Components/CocktailsRecipeCard/CocktailsRecipeCard';\r\nimport styles from './CocktailsRecipe.module.scss';\r\n\r\nfunction CocktailsRecipe() {\r\n  const recipes = useLoaderData() as CocktailInterface[];\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <div className={styles.cocktailsRecipe}>\r\n      <button\r\n        className={styles.backButton}\r\n        onClick={() => {\r\n          navigate('/', { replace: true });\r\n        }}\r\n      >\r\n        Back\r\n      </button>\r\n      <ul className={styles.cardContainer}>\r\n        {recipes &&\r\n          recipes.map((r: CocktailInterface, index: number) => (\r\n            <li key={index}>\r\n              <CocktailsRecipeCard recipe={r} />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CocktailsRecipe;\r\n"],"names":["recipe","strCategory","strDrink","strAlcoholic","strDrinkThumb","strInstructions","strGlass","strIBA","strTags","ingredients","strIngredient1","strIngredient2","strIngredient3","strIngredient4","strIngredient5","measures","strMeasure1","strMeasure2","strMeasure3","strMeasure4","strMeasure5","strMeasure6","strMeasure7","strMeasure8","strMeasure9","strMeasure10","strMeasure11","strMeasure12","strMeasure13","strMeasure14","strMeasure15","className","styles","src","alt","map","item","index","recipes","useLoaderData","navigate","useNavigate","onClick","replace","r"],"sourceRoot":""}